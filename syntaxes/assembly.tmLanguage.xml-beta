<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>fileTypes</key>
        <array>
            <string>asm</string>
        </array>
        <key>name</key>
        <string>PIC Assembly</string>
        <key>patterns</key>
        <array>
            <dict>
                <key>match</key>
                <string>
                    \b(?i)(v)?(addwf|andwf|clrf|clrw|comf|decf|decfsz|incf|incfsz|iorwf|movf|movwf|nop|rlf|rrf|subwf|swapf|xorwf|bcf|bsf|btfsc|btfss|addlw|andlw|call|clrwdt|goto|iorlw|movlw|retfie|retlw|return|sleep|sublw|xorlw)\b
                </string>
                <key>name</key>
                <string>keyword.control.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>
                    \b(?i)(RBP|EBP|BP|CS|DS|ES|FS|GS|SS|RAX|EAX|RBX|EBX|RCX|ECX|RDX|EDX|RCX|RIP|EIP|IP|RSP|ESP|SP|RSI|ESI|SI|RDI|EDI|DI|RFLAGS|EFLAGS|FLAGS|R(8|9|10|11|12|13|14|15)(d|w|b)?|(Y|X)MM([0-9]|10|11|12|13|14|15)|(A|B|C|D)(X|H|L)|CR([0-4]|DR([0-7]|TR6|TR7|EFER)))\b
                </string>
                <key>name</key>
                <string>variable.parameter.register.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b[0-9]+\b</string>
                <key>name</key>
                <string>constant.character.decimal.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(0x)(?i)[A-F0-9]+\b</string>
                <key>name</key>
                <string>constant.character.hexadecimal.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(?i)[A-F0-9]+h\b</string>
                <key>name</key>
                <string>constant.character.hexadecimal.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(?i)(0|1)+b\b</string>
                <key>name</key>
                <string>constant.character.binary.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>("|').*?("|')</string>
                <key>name</key>
                <string>string.assembly</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>^\[</string>
                <key>end</key>
                <string>\]</string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.assembly</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(^struc) ([_a-zA-Z][_a-zA-Z0-9]*)</string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^endstruc</string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.assembly</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>constant.character.assembly</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>^%macro ([_a-zA-Z][_a-zA-Z0-9]*) ([0-9]+)</string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^%endmacro</string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>support.function.directive.assembly</string>
                    </dict>
                    <key>13</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.assembly</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>
                    \s*(?i)(%define|%ifndef|%xdefine|%idefine|%undef|%assign|%defstr|%strcat|%strlen|%substr|%00|%0|%rotate|%rep|%endrep|%include|\$\$|\$|%unmacro|%if|%elif|%else|%endif|%(el)?ifdef|%(el)?ifmacro|%(el)?ifctx|%(el)?ifidn|%(el)?ifidni|%(el)?ifid|%(el)?ifnum|%(el)?ifstr|%(el)?iftoken|%(el)?ifempty|%(el)?ifenv|%pathsearch|%depend|%use|%push|%pop|%repl|%arg|%stacksize|%local|%error|%warning|%fatal|%line|%!|%comment|%endcomment|__NASM_VERSION_ID__|__NASM_VER__|__FILE__|__LINE__|__BITS__|__OUTPUT_FORMAT__|__DATE__|__TIME__|__DATE_NUM__|_TIME__NUM__|__UTC_DATE__|__UTC_TIME__|__UTC_DATE_NUM__|__UTC_TIME_NUM__|__POSIX_TIME__|__PASS__|ISTRUC|AT|IEND|BITS
                    16|BITS 32|BITS 64|USE16|USE32|__SECT__|ABSOLUTE|EXTERN|GLOBAL|COMMON|CPU|FLOAT)\b
                    ?([_a-zA-Z][_a-zA-Z0-9]*)?</string>
            </dict>
            <dict>
                <key>match</key>
                <string>
                    \b(?i)(d(b|w|d|q|t|o|y)|res(b|w|d|q|t|o)|equ|times|align|alignb|sectalign|section|ptr|byte|word|dword|qword|incbin|)\b
                </string>
                <key>name</key>
                <string>support.function.directive.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>(\s)*;.*$</string>
                <key>name</key>
                <string>comment.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>(,|\[|\]|\+|\-|\*)</string>
                <key>name</key>
                <string>source.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^\s*%%.+?:$</string>
                <key>name</key>
                <string>entity.name.function.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^\s*%\$.+?:$</string>
                <key>name</key>
                <string>entity.name.function.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^\.?.+?:$</string>
                <key>name</key>
                <string>entity.name.function.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>^\.?.+?\b</string>
                <key>name</key>
                <string>entity.name.function.assembly</string>
            </dict>
            <dict>
                <key>match</key>
                <string>.+?</string>
                <key>name</key>
                <string>entity.name.function.assembly</string>
            </dict>
        </array>
        <key>newpatterns</key>
        <array>
            <dict>
                <key>include</key>
                <string>#mnemonic-dual</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#opcode</string>
            </dict>
        </array>
        <key>repository</key>
        <dict>
            <key>constants</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b0[by](?:[01][01_]*)\.(?:(?:[01][01_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\b)?</string>
                        <key>name</key>
                        <string>constant.numeric.binary.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b0[by](?:[01][01_]*)(?:p[+-]?(?:[0-9][0-9_]*))\b</string>
                        <key>name</key>
                        <string>constant.numeric.binary.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b0[oq](?:[0-7][0-7_]*)\.(?:(?:[0-7][0-7_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\b)?
                        </string>
                        <key>name</key>
                        <string>constant.numeric.octal.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b0[oq](?:[0-7][0-7_]*)(?:p[+-]?(?:[0-9][0-9_]*))\b</string>
                        <key>name</key>
                        <string>constant.numeric.octal.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:0[dt])?(?:[0-9][0-9_]*)\.(?:(?:[0-9][0-9_]*)?(?:e[+-]?(?:[0-9][0-9_]*))?\b)?
                        </string>
                        <key>name</key>
                        <string>constant.numeric.decimal.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:[0-9][0-9_]*)(?:e[+-]?(?:[0-9][0-9_]*))\b</string>
                        <key>name</key>
                        <string>constant.numeric.decimal.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:[0-9][0-9_]*)p(?:[0-9][0-9_]*)?\b</string>
                        <key>name</key>
                        <string>constant.numeric.decimal.packed-bcd.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?i)\b0[xh](?:[[:xdigit:]][[:xdigit:]_]*)\.(?:(?:[[:xdigit:]][[:xdigit:]_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\b)?
                        </string>
                        <key>name</key>
                        <string>constant.numeric.hex.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b0[xh](?:[[:xdigit:]][[:xdigit:]_]*)(?:p[+-]?(?:[0-9][0-9_]*))\b</string>
                        <key>name</key>
                        <string>constant.numeric.hex.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?i)\$[0-9]\_?(?:[[:xdigit:]][[:xdigit:]_]*)?\.(?:(?:[[:xdigit:]][[:xdigit:]_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\b)?
                        </string>
                        <key>name</key>
                        <string>constant.numeric.hex.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\$[0-9]\_?(?:[[:xdigit:]][[:xdigit:]_]*)(?:p[+-]?(?:[0-9][0-9_]*))\b</string>
                        <key>name</key>
                        <string>constant.numeric.hex.floating-point.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:(?:0[by](?:[01][01_]*))|(?:(?:[01][01_]*)[by]))\b</string>
                        <key>name</key>
                        <string>constant.numeric.binary.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:(?:0[oq](?:[0-7][0-7_]*))|(?:(?:[0-7][0-7_]*)[oq]))\b</string>
                        <key>name</key>
                        <string>constant.numeric.octal.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)\b(?:(?:0[dt](?:[0-9][0-9_]*))|(?:(?:[0-9][0-9_]*)[dt]?))\b</string>
                        <key>name</key>
                        <string>constant.numeric.decimal.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?i)(?:\$[0-9]\_?(?:[[:xdigit:]][[:xdigit:]_]*)?)\b</string>
                        <key>name</key>
                        <string>constant.numeric.hex.asm.x86_64</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?i)\b(?:(?:0[xh](?:[[:xdigit:]][[:xdigit:]_]*))|(?:(?:[[:xdigit:]][[:xdigit:]_]*)[hxHX]))\b
                        </string>
                        <key>name</key>
                        <string>constant.numeric.hex.asm.x86_64</string>
                    </dict>
                </array>
            </dict>

            <key>mnemonic-dual</key>
            <dict>
                <key>name</key>
                <string>meta.statement.assembly.dual-param</string>
                <key>match</key>
                <string>(?i)^([^\s]*)\s+([^\s]+)\s+([^\s]+)\s*,\s*([^\s]+)\s+([^\s]+)(\s+.*)?</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#label</string>
                            </dict>
                        </array>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#opcode</string>
                            </dict>
                        </array>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#param</string>
                            </dict>
                        </array>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#param</string>
                            </dict>
                        </array>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                </dict>
            </dict>

            <key>label</key>
            <dict>
                <key>name</key>
                <string>entity.name.function.local.label.assembly</string>
                <key>match</key>
                <string>\b[^\s+]\b</string>
            </dict>

            <key>opcode</key>
            <dict>
                <key>name</key>
                <string>keyword.operator.word.mnemonic.opx</string>
                <key>match</key>
                <string>(?i)\b(addwf|andwf|clrf|clrw|comf|decf|decfsz|incf|incfsz|iorwf|movf|movwf|nop|rlf|rrf|subwf|swapf|xorwf|bcf|bsf|btfsc|btfss|addlw|andlw|call|clrwdt|goto|iorlw|movlw|retfie|retlw|return|sleep|sublw|xorlw)\b</string>
            </dict>

            <key>comment</key>
            <dict>
                <key>name</key>
                <string>comment.line.assembly</string>
                <key>match</key>
                <string>;.*</string>
            </dict>
        </dict>
    </dict>
    <key>scopeName</key>
    <string>source.assembly</string>
    <key>uuid</key>
    <string>b23e10d9-4cfd-4ac0-84e2-5e6845522206</string>
    </dict>
</plist>